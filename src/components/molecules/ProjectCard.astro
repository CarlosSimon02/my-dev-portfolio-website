---
import type { LanguageKeys } from "@/i18n/languages";
import type { ProjectType } from "@/i18n/projects";

import ContentTitle from "@/components/atoms/ContentTitle.astro";
import P from "@/components/atoms/P.astro";
import ThemedImage from "@/components/atoms/ThemedImage.astro";

export type ProjectCardUITranslationsType = {
  exploreAnchorLabel: string;
  listOfTechUsedLabel: string;
  screenshotAlt: string;
};

type Props = {
  project: ProjectType;
  translations: ProjectCardUITranslationsType;
};

const { project, translations: t } = Astro.props;
const { lang } = Astro.params as { lang: LanguageKeys };
---

<div class="max-w-[30rem] text-start">
  <div class="mb-7 overflow-clip rounded-lg">
    <a
      aria-hidden="true"
      class="group cursor-pointer"
      href={`/${lang}/projects/${project.slug}`}
      tabindex="-1"
    >
      <ThemedImage
        alt={t.screenshotAlt}
        srcDark={project.thumbnailDark}
        srcLight={project.thumbnailLight}
      />
    </a>
  </div>
  <ContentTitle title={project.title} />
  <span class="sr-only" id={`tech-list-label-of${project.slug}`}
    >{t.listOfTechUsedLabel}</span
  >
  <ul
    aria-labelledby={`tech-list-label-of-${project.slug}`}
    class="mb-5 flex flex-wrap gap-2"
  >
    {
      project.technologies.map((technology) => (
        <li class="rounded-full border-[0.0625rem] px-3 py-1">
          {technology.name}
        </li>
      ))
    }
  </ul>
  <P class="mb-5" html={project.translations[lang].description} />
  <a
    class:list={[
      "flex w-fit cursor-pointer items-center justify-start gap-2 text-lg text-accent-500",
      "before:h-[0.0625rem] before:w-12 before:bg-accent-500 before:transition-all before:duration-700 hover:before:w-20 before:hover:duration-150"
    ]}
    href={`/${lang}/projects/${project.slug}`}>{t.exploreAnchorLabel}</a
  >
</div>
